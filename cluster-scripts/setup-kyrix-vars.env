source setup-shell-vars.env

export KYRIX=`printf "%s\n" \`kubectl get pod -o jsonpath="{..metadata.name}"\`|grep kyrix`
echo "KYRIX=$KYRIX"
export RS_KYRIX=`printf "%s\n" \`kubectl get replicasets -o jsonpath="{..metadata.name}"\`|grep kyrix`
echo "RS_KYRIX=$RS_KYRIX"
export KYRIX_IP=`kubectl get services -o wide | grep kyrix | awk '{print $4}'`
echo "KYRIX_IP=$KYRIX_IP  i.e. http://$KYRIX_IP:8000/"
function kyrix-server(){
    kubectl exec -it $KYRIX -- sh -c "apk add -q bash emacs busybox-extras; ${*:-bash}"
}
echo "run 'kyrix-server' to login to the kyrix server"
function kyrix-server-recompile-backend(){
    cd back-end
    tar cf - src | kyrix-server "tar xf -; mvn -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn compile"
    cd ..
}
echo "run 'kyrix-server-recompile-backend' to login to the kyrix server"

function recreatedb-kyrix(){
    #PSQL_CONN="postgres://$USERNAME:$USER_PASSWORD@localhost/postgres"
    PG_ENCRYPTION=md5
    USERNAME=kyrix
    USER_PASSWORD=kyrix_password
    DBNAME=kyrix
    DATA_DBNAME=$1
    if [ "x$DATA_DBNAME" = "x" ]; then
        echo "Usage: $0 <dbname>"
        exit 1
    fi
    source ./setup-citus-vars.env
    echo "dropping active connections..."
    kubectl exec -it $MASTER -- su - postgres -c "psql -c \"SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE pg_stat_activity.datname = '$DBNAME' AND pid <> pg_backend_pid();\" "
    for w in $CITUS_ALL_NODES; do
	PSQL="PGOPTIONS='--client-min-messages=warning' psql -X -q --pset pager=off"
        echo "recreating database on $w"
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"drop database if exists $DBNAME;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"drop database if exists $DATA_DBNAME;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"SET password_encryption = '$PG_ENCRYPTION';drop user if exists $USERNAME; create user $USERNAME superuser password '$USER_PASSWORD';\""
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"create database $DBNAME owner $USERNAME;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL $DBNAME -c \"create extension citus;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL $DBNAME -c \"create extension plv8;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL -c \"create database $DATA_DBNAME owner $USERNAME;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL $DATA_DBNAME -c \"create extension citus;\""
        kubectl exec -it $w -- su - postgres -c "$PSQL $DATA_DBNAME -c \"create extension plv8;\""
    done
}
echo "run 'recreatedb-kyrix <dbname>' to drop/recreate the kyrix database and the <dbname> database"

function force-nba-reload(){
    kubectl exec -it $KYRIX -- sh -c "cd /kyrix/compiler/examples/nba; node nba.js -f"
}
echo "run 'force-nba-reload' to reload and reindex the NBA data, i.e. if indexing algorithm changes"

function kyrix-psql(){
    kubectl exec -it $MASTER -- su - postgres -c "psql postgres://$USERNAME:$USER_PASSWORD@localhost/kyrix $*"
}
echo "run 'kyrix-psql' to login to the Citus master node, in the k8s cluster and run psql as user $USERNAME, database postgres"
function kyrix-activity(){
    kyrix-psql -c "\"SELECT pid,now()-pg_stat_activity.query_start AS duration,query,state FROM pg_stat_activity WHERE (now() - pg_stat_activity.query_start) > interval '5 minutes';\""
}
echo "run 'kyrix-activity' to login to the Citus master node, in the k8s cluster and get the active queries"
function kyrix-nba(){
    kubectl exec -it $MASTER -- su - postgres -c "psql postgres://$USERNAME:$USER_PASSWORD@localhost/nba"
}
echo "run 'kyrix-nba' to login to the Citus master node, in the k8s cluster and run psql as user $USERNAME, database nba"
function kyrix-db(){
    kubectl exec -it $MASTER -- su - postgres -c "psql postgres://$USERNAME:$USER_PASSWORD@localhost/$1"
}
echo "run 'kyrix-db nba' to login to the Citus master node, in the k8s cluster and run psql as user $USERNAME, database nba"
function kyrix-postgres(){
    kubectl exec -it $MASTER -- su - postgres -c "psql postgres://$USERNAME:$USER_PASSWORD@localhost/postgres"
}
echo "run 'kyrix-postgres' to login to the Citus master node, in the k8s cluster and run psql as user $USERNAME, database nba"

